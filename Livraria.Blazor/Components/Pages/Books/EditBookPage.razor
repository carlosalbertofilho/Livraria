@page "/livros/editar/{id}"
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Editar Livro</PageTitle>

@switch ( StatusResponse )
{
    case ResponseStatus.Error:
        <ShowError Errors="@ErrorsResponse" />
        break;
    case ResponseStatus.Success:
        <ShowSuccess Message="Livro cadastrado com sucesso!" 
            Books="@ViewBookResponse" />
        break;
    case ResponseStatus.Loading:
    default:
        <EditBookForm Id="@Id"
            OnObjectChange="HandleObjecteChange"
            OnStatusChange="HandleStatusChange"
            OnErrorsChange="HandleErrorsChange"/>
        break;
}



@code {
    [Parameter] public string Id { get; set; } = string.Empty;
    private ResponseStatus? StatusResponse { get; set; }
    private List<string> ErrorsResponse { get; set; } = [];
    private List<ViewBook> ViewBookResponse { get; set; } = [];

    protected override void OnInitialized ()
       => StatusResponse = ResponseStatus.Loading;

    private Task HandleObjecteChange ( ViewBook response )
    {
        ViewBookResponse.Add( response );
        return Task.CompletedTask;
    }

    private Task HandleStatusChange ( ResponseStatus? status )
    {
        StatusResponse = status;
        return Task.CompletedTask;
    }

    private Task HandleErrorsChange ( List<string> errors )
    {
        ErrorsResponse = errors;
        return Task.CompletedTask;
    }

}
