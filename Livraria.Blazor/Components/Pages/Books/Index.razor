@page "/livros"
@inject IBookService bookService
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Catalogo de Livros</PageTitle>

<h3>Livros</h3>

@switch (Status)
{
    case ResponseStatus.Loading:
        <ShowLoading/>
        break;
    case ResponseStatus.Error:
        <ShowError Errors="@Errors" />
        break;
    case ResponseStatus.Success:
    default:
        <BookCards Books="@Books" />
        break;
}


@code 
{
    private List<ViewBook> Books { get;  } = [];
    private ResponseStatus Status { get; set; } = ResponseStatus.Loading;
    private List<string> Errors { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        var response = await bookService.GetAll();
        Books.AddRange(response.Data.SelectMany(x => x));
        Errors = response.Errors;
        Status = response.Status;
    }
}