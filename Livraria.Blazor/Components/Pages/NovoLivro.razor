@page "/novo-livro"
@inject IBookService bookService
@rendermode InteractiveServer
<h3>Novo Livro</h3>

<PageTitle>Novo Livro</PageTitle>

<div class="row justify-content-center">
    <div class="col-6">
        <EditForm Enhance="true" method="post" FormName="newBookForm" OnValidSubmit="AddBook" Model="@Book">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <label for="title" class="form-label">Título</label>
                <InputText id="title" class="form-control" @bind-Value="Book.Title" />
                <ValidationMessage For="@(() => Book.Title)" />
            </div>
            <div class="mb-3">
                <label for="author" class="form-label">Autor</label>
                <InputText id="author" class="form-control" @bind-Value="Book.Author" />
                <ValidationMessage For="@(() => Book.Author)" />
            </div>
            <div class="mb-3">
                <label for="publishedAt" class="form-label">Ano de Publicação</label>
                <InputDate id="publishedAt" class="from-control" @bind-Value="Book.PublishedAt" />
                <ValidationMessage For="@(() => Book.PublishedAt)" />
            </div>
            <div class="mb-3">
                <label for="publishingCompany" class="form-label">Editora</label>
                <InputSelect id="publishingCompany" class="form-control" @bind-Value="Book.PublishingCompany">
                    <option value="">Selecione...</option>
                    @foreach (var item in Enum.GetValues(typeof(PublishingCompany)))
                    {
                        <option value="@item">@item</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Book.PublishingCompany)" />
            </div>
            <div class="mb3">
                <label for="category" class="form-label">Categoria</label>
                <InputSelect id="category" class="form-control" @bind-Value="Book.Category">
                    <option value="">Selecione...</option>
                    @foreach (var item in Enum.GetValues(typeof(Category)))
                    {
                        <option value="@item">@item</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Book.Category)" />
            </div>
            <div class="mb-3">  
                <label for="cover" class="from-label">Capa</label>
                <InputText id="cover" class="form-control" @bind-Value="Book.Cover" />
                <ValidationMessage For="@(() => Book.Cover)" />
            </div>
            <div class="mb-3">
                <label for="synopsis" class="from-label">Sinopse</label>
                <InputTextArea id="synopsis" class="form-control" @bind-Value="Book.Synopsis" />
                <ValidationMessage For="@(() => Book.Synopsis)" />
            </div>
            <button type="submit" class="btn btn-primary">Salvar</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm(FormName = "newBookForm")]
    public EditBook Book { get; set; } = null!;
    public ResponseStatus Status { get; set; }
    public ViewBook? Response { get; set; }
    public List<string> Errors { get; set; } = [];

    protected override void OnInitialized ()
        => Book = new EditBook( "", "", DateTime.Now, Domain.Enums.PublishingCompany.Nenhum, Domain.Enums.Category.Nenhum );

    public async Task AddBook ()
    {
        var response = new HandleResponse(await bookService.Create(Book!));
        Status = response.Status;
        Response = response.ResponseData;
        Errors = response.Errors;
    }
}
